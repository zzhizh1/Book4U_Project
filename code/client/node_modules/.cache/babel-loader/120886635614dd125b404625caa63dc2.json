{"ast":null,"code":"import { warn } from './debug';\nexport default function createEventEmitter() {\n  var events = Object.create(null);\n\n  function on(eventNames, listener, direction) {\n    if (direction === void 0) {\n      direction = false;\n    }\n\n    eventNames = getEventNames(eventNames);\n    var current = events;\n    var maxIndex = eventNames.length - 1;\n\n    for (var i = 0; i < eventNames.length; i++) {\n      var key = eventNames[i];\n\n      if (!current[key]) {\n        current[key] = i === maxIndex ? [] : {};\n      }\n\n      current = current[key];\n    }\n\n    if (!Array.isArray(current)) {\n      warn('[React Keep Alive] Access path error.');\n    }\n\n    if (direction) {\n      current.unshift(listener);\n    } else {\n      current.push(listener);\n    }\n  }\n\n  function off(eventNames, listener) {\n    var listeners = getListeners(eventNames);\n\n    if (!listeners) {\n      return;\n    }\n\n    var matchIndex = listeners.findIndex(function (v) {\n      return v === listener;\n    });\n\n    if (matchIndex !== -1) {\n      listeners.splice(matchIndex, 1);\n    }\n  }\n\n  function removeAllListeners(eventNames) {\n    var listeners = getListeners(eventNames);\n\n    if (!listeners) {\n      return;\n    }\n\n    eventNames = getEventNames(eventNames);\n    var lastEventName = eventNames.pop();\n\n    if (lastEventName) {\n      var event_1 = eventNames.reduce(function (obj, key) {\n        return obj[key];\n      }, events);\n      event_1[lastEventName] = [];\n    }\n  }\n\n  function emit(eventNames) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    var listeners = getListeners(eventNames);\n\n    if (!listeners) {\n      return;\n    }\n\n    for (var _a = 0, listeners_1 = listeners; _a < listeners_1.length; _a++) {\n      var listener = listeners_1[_a];\n\n      if (listener) {\n        listener.apply(void 0, args);\n      }\n    }\n  }\n\n  function listenerCount(eventNames) {\n    var listeners = getListeners(eventNames);\n    return listeners ? listeners.length : 0;\n  }\n\n  function clear() {\n    events = Object.create(null);\n  }\n\n  function getListeners(eventNames) {\n    eventNames = getEventNames(eventNames);\n\n    try {\n      return eventNames.reduce(function (obj, key) {\n        return obj[key];\n      }, events);\n    } catch (e) {\n      return;\n    }\n  }\n\n  function getEventNames(eventNames) {\n    if (!eventNames) {\n      warn('[React Keep Alive] Must exist event name.');\n    }\n\n    if (typeof eventNames === 'string') {\n      eventNames = [eventNames];\n    }\n\n    return eventNames;\n  }\n\n  return {\n    on: on,\n    off: off,\n    emit: emit,\n    clear: clear,\n    listenerCount: listenerCount,\n    removeAllListeners: removeAllListeners\n  };\n}","map":{"version":3,"sources":["/Users/miabb/node_modules/react-component-keepalive/es/utils/createEventEmitter.js"],"names":["warn","createEventEmitter","events","Object","create","on","eventNames","listener","direction","getEventNames","current","maxIndex","length","i","key","Array","isArray","unshift","push","off","listeners","getListeners","matchIndex","findIndex","v","splice","removeAllListeners","lastEventName","pop","event_1","reduce","obj","emit","args","_i","arguments","_a","listeners_1","apply","listenerCount","clear","e"],"mappings":"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","sourcesContent":["import { warn } from './debug';\r\nexport default function createEventEmitter() {\r\n    var events = Object.create(null);\r\n    function on(eventNames, listener, direction) {\r\n        if (direction === void 0) { direction = false; }\r\n        eventNames = getEventNames(eventNames);\r\n        var current = events;\r\n        var maxIndex = eventNames.length - 1;\r\n        for (var i = 0; i < eventNames.length; i++) {\r\n            var key = eventNames[i];\r\n            if (!current[key]) {\r\n                current[key] = i === maxIndex ? [] : {};\r\n            }\r\n            current = current[key];\r\n        }\r\n        if (!Array.isArray(current)) {\r\n            warn('[React Keep Alive] Access path error.');\r\n        }\r\n        if (direction) {\r\n            current.unshift(listener);\r\n        }\r\n        else {\r\n            current.push(listener);\r\n        }\r\n    }\r\n    function off(eventNames, listener) {\r\n        var listeners = getListeners(eventNames);\r\n        if (!listeners) {\r\n            return;\r\n        }\r\n        var matchIndex = listeners.findIndex(function (v) { return v === listener; });\r\n        if (matchIndex !== -1) {\r\n            listeners.splice(matchIndex, 1);\r\n        }\r\n    }\r\n    function removeAllListeners(eventNames) {\r\n        var listeners = getListeners(eventNames);\r\n        if (!listeners) {\r\n            return;\r\n        }\r\n        eventNames = getEventNames(eventNames);\r\n        var lastEventName = eventNames.pop();\r\n        if (lastEventName) {\r\n            var event_1 = eventNames.reduce(function (obj, key) { return obj[key]; }, events);\r\n            event_1[lastEventName] = [];\r\n        }\r\n    }\r\n    function emit(eventNames) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var listeners = getListeners(eventNames);\r\n        if (!listeners) {\r\n            return;\r\n        }\r\n        for (var _a = 0, listeners_1 = listeners; _a < listeners_1.length; _a++) {\r\n            var listener = listeners_1[_a];\r\n            if (listener) {\r\n                listener.apply(void 0, args);\r\n            }\r\n        }\r\n    }\r\n    function listenerCount(eventNames) {\r\n        var listeners = getListeners(eventNames);\r\n        return listeners ? listeners.length : 0;\r\n    }\r\n    function clear() {\r\n        events = Object.create(null);\r\n    }\r\n    function getListeners(eventNames) {\r\n        eventNames = getEventNames(eventNames);\r\n        try {\r\n            return eventNames.reduce(function (obj, key) { return obj[key]; }, events);\r\n        }\r\n        catch (e) {\r\n            return;\r\n        }\r\n    }\r\n    function getEventNames(eventNames) {\r\n        if (!eventNames) {\r\n            warn('[React Keep Alive] Must exist event name.');\r\n        }\r\n        if (typeof eventNames === 'string') {\r\n            eventNames = [eventNames];\r\n        }\r\n        return eventNames;\r\n    }\r\n    return {\r\n        on: on,\r\n        off: off,\r\n        emit: emit,\r\n        clear: clear,\r\n        listenerCount: listenerCount,\r\n        removeAllListeners: removeAllListeners,\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}