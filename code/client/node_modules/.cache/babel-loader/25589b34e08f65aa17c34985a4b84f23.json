{"ast":null,"code":"var NODE_TYPES;\n\n(function (NODE_TYPES) {\n  NODE_TYPES[NODE_TYPES[\"ELEMENT\"] = 1] = \"ELEMENT\";\n  NODE_TYPES[NODE_TYPES[\"COMMENT\"] = 8] = \"COMMENT\";\n})(NODE_TYPES || (NODE_TYPES = {}));\n\nfunction findElementsBetweenComments(node, identification) {\n  var elements = [];\n  var childNodes = node.childNodes;\n  var startCommentExist = false;\n\n  for (var _i = 0, childNodes_1 = childNodes; _i < childNodes_1.length; _i++) {\n    var child = childNodes_1[_i];\n\n    if (child.nodeType === NODE_TYPES.COMMENT && child.nodeValue.trim() === identification && !startCommentExist) {\n      startCommentExist = true;\n    } else if (startCommentExist && child.nodeType === NODE_TYPES.ELEMENT) {\n      elements.push(child);\n    } else if (child.nodeType === NODE_TYPES.COMMENT && startCommentExist) {\n      return elements;\n    }\n  }\n\n  return elements;\n}\n\nfunction findComment(node, identification) {\n  var childNodes = node.childNodes;\n\n  for (var _i = 0, childNodes_2 = childNodes; _i < childNodes_2.length; _i++) {\n    var child = childNodes_2[_i];\n\n    if (child.nodeType === NODE_TYPES.COMMENT && child.nodeValue.trim() === identification) {\n      return child;\n    }\n  }\n}\n\nexport default function changePositionByComment(identification, presentParentNode, originalParentNode) {\n  if (!presentParentNode || !originalParentNode) {\n    return;\n  }\n\n  var elementNodes = findElementsBetweenComments(originalParentNode, identification);\n  var commentNode = findComment(presentParentNode, identification);\n\n  if (!elementNodes.length || !commentNode) {\n    return;\n  }\n\n  elementNodes.push(elementNodes[elementNodes.length - 1].nextSibling);\n  elementNodes.unshift(elementNodes[0].previousSibling); // Deleting comment elements when using commet components will result in component uninstallation errors\n\n  for (var i = elementNodes.length - 1; i >= 0; i--) {\n    presentParentNode.insertBefore(elementNodes[i], commentNode);\n  }\n\n  originalParentNode.appendChild(commentNode);\n}","map":{"version":3,"sources":["/Users/miabb/node_modules/react-component-keepalive/es/utils/changePositionByComment.js"],"names":["NODE_TYPES","findElementsBetweenComments","node","identification","elements","childNodes","startCommentExist","_i","childNodes_1","length","child","nodeType","COMMENT","nodeValue","trim","ELEMENT","push","findComment","childNodes_2","changePositionByComment","presentParentNode","originalParentNode","elementNodes","commentNode","nextSibling","unshift","previousSibling","i","insertBefore","appendChild"],"mappings":"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","sourcesContent":["var NODE_TYPES;\r\n(function (NODE_TYPES) {\r\n    NODE_TYPES[NODE_TYPES[\"ELEMENT\"] = 1] = \"ELEMENT\";\r\n    NODE_TYPES[NODE_TYPES[\"COMMENT\"] = 8] = \"COMMENT\";\r\n})(NODE_TYPES || (NODE_TYPES = {}));\r\nfunction findElementsBetweenComments(node, identification) {\r\n    var elements = [];\r\n    var childNodes = node.childNodes;\r\n    var startCommentExist = false;\r\n    for (var _i = 0, childNodes_1 = childNodes; _i < childNodes_1.length; _i++) {\r\n        var child = childNodes_1[_i];\r\n        if (child.nodeType === NODE_TYPES.COMMENT &&\r\n            child.nodeValue.trim() === identification &&\r\n            !startCommentExist) {\r\n            startCommentExist = true;\r\n        }\r\n        else if (startCommentExist && child.nodeType === NODE_TYPES.ELEMENT) {\r\n            elements.push(child);\r\n        }\r\n        else if (child.nodeType === NODE_TYPES.COMMENT && startCommentExist) {\r\n            return elements;\r\n        }\r\n    }\r\n    return elements;\r\n}\r\nfunction findComment(node, identification) {\r\n    var childNodes = node.childNodes;\r\n    for (var _i = 0, childNodes_2 = childNodes; _i < childNodes_2.length; _i++) {\r\n        var child = childNodes_2[_i];\r\n        if (child.nodeType === NODE_TYPES.COMMENT &&\r\n            child.nodeValue.trim() === identification) {\r\n            return child;\r\n        }\r\n    }\r\n}\r\nexport default function changePositionByComment(identification, presentParentNode, originalParentNode) {\r\n    if (!presentParentNode || !originalParentNode) {\r\n        return;\r\n    }\r\n    var elementNodes = findElementsBetweenComments(originalParentNode, identification);\r\n    var commentNode = findComment(presentParentNode, identification);\r\n    if (!elementNodes.length || !commentNode) {\r\n        return;\r\n    }\r\n    elementNodes.push(elementNodes[elementNodes.length - 1].nextSibling);\r\n    elementNodes.unshift(elementNodes[0].previousSibling);\r\n    // Deleting comment elements when using commet components will result in component uninstallation errors\r\n    for (var i = elementNodes.length - 1; i >= 0; i--) {\r\n        presentParentNode.insertBefore(elementNodes[i], commentNode);\r\n    }\r\n    originalParentNode.appendChild(commentNode);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}